// Generated by Dagger (https://google.github.io/dagger).
package com.abhijit.truecaller_assingment.di.modules;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.reactivex.disposables.CompositeDisposable;

public final class AppModule_CompositeDisposableProviderFactory
    implements Factory<CompositeDisposable> {
  private final AppModule module;

  public AppModule_CompositeDisposableProviderFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public CompositeDisposable get() {
    return Preconditions.checkNotNull(
        module.compositeDisposableProvider(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static AppModule_CompositeDisposableProviderFactory create(AppModule module) {
    return new AppModule_CompositeDisposableProviderFactory(module);
  }

  public static CompositeDisposable proxyCompositeDisposableProvider(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.compositeDisposableProvider(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
